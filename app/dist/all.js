console.log("Load script.js");var app={};const VueApp=Vue.createApp({data:function(){return{test:"heeeee",dataObj:{},comments:[],currentUser:{}}},mounted:function(){this.fetcher()},methods:{fetcher(){fetch("./app/js/data/data.json").then((e=>e.json())).then((e=>{this.dataObj=e,this.comments=e.comments,this.currentUser=e.currentUser,console.log(JSON.parse(JSON.stringify(this.currentUser.image.png)))})).catch((e=>console.log(e.message)))}}});app.global={init:function(){console.log("load global functions"),app.global.loadHeader()},loadHeader:function(){console.log("loadHeader()")},fetcher:async function(e){console.log("fetcher entered");const t=await fetch("./app/js/data/data.json");e(await t.json())}},app.global.init(),VueApp.component("alert-blocker",{props:{},template:'\n    <div class="alertBlocker">\n        <div class="deleteAlert">\n            <h1>Delete comment</h1>\n            <p>Are you sure you want to delete this comment? This will remove the comment and can\'t be undone.</p>\n            <button>NO, CANCEL</button>\n            <button>YES, DELETE</button>\n        </div>\n    </div>\n    ',data:function(){return{}},methods:{},computed:{}}),VueApp.component("comment",{props:{commentData:{type:Object,required:!0}},template:'\n    <div class="comment">\n        <div class="votes">\n            <div class="upvote"><img src="./images/icon-plus.svg" alt="up vote"></div>\n            <div class="voteNumber">{{commentData.score}}</div>\n            <div class="downvote"><img src="./images/icon-minus.svg" alt="down vote"></div>\n        </div>\n        <div class="commentInfo">\n            <img :src="image" alt="image-amyrobson" class="icon">\n            <span class="username">{{commentData.user.username}}</span>\n            <div class="you"><span>you</span></div>\n            <p class="date">{{commentData.createAt}}</p>\n        </div>\n        <div class="action">\n            <div class="reply">\n                <img src="./images/icon-reply.svg" alt="reply">\n                <span>Reply</span>\n            </div>\n            <div class="delete">\n                <img src="./images/icon-delete.svg" alt="delete">\n                <span>Delete</span>\n            </div>\n            <div class="edit">\n                <img src="./images/icon-edit.svg" alt="Edit">\n                <span>Edit</span>\n            </div>\n        </div>\n        <div class="content"><p>{{commentData.content}}</p>\n        </div>\n        <textarea name="comment" id="text" cols="30" rows="3" placeholder="Add a comment..."></textarea>\n        <button>update</button>\n    </div>\n    ',data:function(){return{}},methods:{},computed:{image(){return this.commentData.user.image.png}}}),VueApp.component("commentor",{props:{user:{type:Object,required:!0}},template:'\n    <div class="commentor" id="commentor">\n        <img :src="avatar" :alt="avatarOf" class="avatar">\n        <textarea name="comment" id="text" cols="30" rows="3" placeholder="Add a comment..."></textarea>\n        <button>send</button>\n        <button>reply</button>\n    </div>\n    ',data:function(){return{}},created:function(){console.log(this.user.image.png)},methods:{},computed:{avatar(){return this.user.image.png},avatarOf(){return"avatar of "+this.user.username},updater(){return this.user.image.png}}}),VueApp.component("interaction",{props:{context:{type:Object,required:!0}},template:'\n    <comment :commentData="context"></comment>\n    \n    ',data:function(){return{}},methods:{},computed:{}}),VueApp.component("thread",{props:{commentin:{type:Object,required:!0}},template:'\n    <div class="thread"> \n        <interaction :context="commentin"  :key="commentin.id"></interaction>\n        <div class="replys" v-show="isReplied">\n            <interaction v-for="(reply,index) in commentin.replies" :context="reply"  :key="index"></interaction> \n        </div>\n    </div>\n    ',data:function(){return{}},methods:{},computed:{isReplied(){return!(this.commentin.replies<=0)}}});
//# sourceMappingURL=all.js.map