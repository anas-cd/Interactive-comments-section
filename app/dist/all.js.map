{"version":3,"sources":["global/script.js","global/vue.js","global/_global.js","VueComps/alert-blocker.js","VueComps/comment.js","VueComps/commentor.js","VueComps/interaction.js","VueComps/thread.js"],"names":["console","log","app","VueApp","Vue","createApp","data","test","dataObj","comments","currentUser","mounted","this","fetcher","methods","[object Object]","fetch","then","res","json","JSON","parse","stringify","image","png","catch","err","message","global","init","loadHeader","async","updater","responce","component","props","template","computed","commentData","type","Object","required","user","created","username","context","commentin","replies"],"mappings":"AAAAA,QAAAC,IAAA,kBAGA,IAAAC,IAAA,GCFA,MAAAC,OAAAC,IAAAC,UAAA,CACAC,KAAA,WACA,MAAA,CACAC,KAAA,SACAC,QAAA,GACAC,SAAA,GACAC,YAAA,KAIAC,QAAA,WACAC,KAAAC,WAGAC,QAAA,CACAC,UACAC,MAAA,2BACAC,MAAAC,GAAAA,EAAAC,SACAF,MAAAX,IACAM,KAAAJ,QAAAF,EACAM,KAAAH,SAAAH,EAAAG,SACAG,KAAAF,YAAAJ,EAAAI,YACAV,QAAAC,IAAAmB,KAAAC,MAAAD,KAAAE,UAAAV,KAAAF,YAAAa,MAAAC,UAEAC,OAAAC,GAAA1B,QAAAC,IAAAyB,EAAAC,eCxBAzB,IAAA0B,OAAA,CACAC,KAAA,WACA7B,QAAAC,IAAA,yBACAC,IAAA0B,OAAAE,cAEAA,WAAA,WACA9B,QAAAC,IAAA,iBAGAY,QAAAkB,eAAAC,GACAhC,QAAAC,IAAA,mBACA,MAAAgC,QAAAjB,MAAA,2BAIAgB,QAHAC,EAAAd,UAQAjB,IAAA0B,OAAAC,OCrBA1B,OAAA+B,UAAA,gBAAA,CACAC,MAAA,GAGAC,SAEA,qVAUA9B,KAAA,WACA,MAAA,IAIAQ,QAAA,GAGAuB,SAAA,KCxBAlC,OAAA+B,UAAA,UAAA,CACAC,MAAA,CACAG,YAAA,CACAC,KAAAC,OACAC,UAAA,IAGAL,SAEA,q1CAiCA9B,KAAA,WACA,MAAA,IAIAQ,QAAA,GAGAuB,SAAA,CACAtB,QAAA,OAAAH,KAAA0B,YAAAI,KAAAnB,MAAAC,QCnDArB,OAAA+B,UAAA,YAAA,CACAC,MAAA,CACAO,KAAA,CACAH,KAAAC,OACAC,UAAA,IAGAL,SAEA,sSAQA9B,KAAA,WACA,MAAA,IAIAqC,QAAA,WAEA3C,QAAAC,IAAAW,KAAA8B,KAAAnB,MAAAC,MAGAV,QAAA,GAGAuB,SAAA,CACAtB,SAAA,OAAAH,KAAA8B,KAAAnB,MAAAC,KACAT,WAAA,MAAA,aAAAH,KAAA8B,KAAAE,UACA7B,UAAA,OAAAH,KAAA8B,KAAAnB,MAAAC,QCjCArB,OAAA+B,UAAA,cAAA,CACAC,MAAA,CACAU,QAAA,CACAN,KAAAC,OACAC,UAAA,IAGAL,SAEA,+DAIA9B,KAAA,WACA,MAAA,IAIAQ,QAAA,GAGAuB,SAAA,KCrBAlC,OAAA+B,UAAA,SAAA,CACAC,MAAA,CACAW,UAAA,CACAP,KAAAC,OACAC,UAAA,IAGAL,SAEA,oTAQA9B,KAAA,WACA,MAAA,IAIAQ,QAAA,GAGAuB,SAAA,CACAtB,YAAA,QAAAH,KAAAkC,UAAAC,SAAA","file":"all.js","sourcesContent":["console.log(\"Load script.js\");  \r\n\r\n// Instantiating the global app object\r\nvar app = {};\r\n\r\n","// Vue \r\nconst VueApp = Vue.createApp({\r\n    data: function() {\r\n        return {\r\n            test: 'heeeee'\r\n            ,dataObj: {}\r\n            ,comments: []\r\n            ,currentUser: {}\r\n            \r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.fetcher()\r\n        \r\n    },\r\n    methods: {\r\n        fetcher() {\r\n            fetch('./app/js/data/data.json')\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.dataObj = data;\r\n                this.comments = data.comments;\r\n                this.currentUser = data.currentUser;\r\n                console.log(JSON.parse(JSON.stringify(this.currentUser.image.png)));\r\n            })\r\n            .catch((err) => console.log(err.message)) \r\n        }\r\n    }\r\n}); \r\n","// Global\r\napp.global = {\r\n    init: function(){ // Load all global functions here\r\n        console.log(\"load global functions\");\r\n        app.global.loadHeader();\r\n    },\r\n    loadHeader: function(){ // Some specific function\r\n        console.log(\"loadHeader()\");\r\n        \r\n    },\r\n    fetcher: async function (updater) {\r\n        console.log(\"fetcher entered\");\r\n        const responce = await fetch('./app/js/data/data.json');\r\n        let data = await responce.json();\r\n        \r\n        \r\n        updater(data);\r\n    }\r\n};\r\n\r\n// Run the global stuff\r\napp.global.init();\r\n\r\n// methods of getting the body of the promise from fetcher: \r\n\r\n//1) IIFE (Immediately invoked function expression) for using await at the top level\r\n\r\n// (async function() {\r\n//     let dataObj = await app.global.fetcher(); \r\n//     console.log(dataObj);\r\n// })();\r\n\r\n\r\n//2) using a callback functino:\r\n \r\n// function updater(data) {\r\n//     // the code in here will run whenever the fetcher finishes\r\n//     console.log(data);\r\n//     console.log(\"HELLLOOOO\");\r\n//     return data; \r\n// }\r\n// app.global.fetcher(updater); // here we are passing the updater function as a callback function\r\n\r\n\r\n","VueApp.component('alert-blocker', {\r\n    props: {\r\n \r\n    },\r\n    template:\r\n    /* html */\r\n    `\r\n    <div class=\"alertBlocker\">\r\n        <div class=\"deleteAlert\">\r\n            <h1>Delete comment</h1>\r\n            <p>Are you sure you want to delete this comment? This will remove the comment and can't be undone.</p>\r\n            <button>NO, CANCEL</button>\r\n            <button>YES, DELETE</button>\r\n        </div>\r\n    </div>\r\n    `,\r\n    data: function () {\r\n        return {\r\n\r\n        }\r\n    },\r\n    methods: {\r\n\r\n    },\r\n    computed: {\r\n        \r\n    }\r\n});","VueApp.component('comment', {\r\n    props: {\r\n        commentData: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    }, \r\n    template: \r\n    /* html */\r\n    `\r\n    <div class=\"comment\">\r\n        <div class=\"votes\">\r\n            <div class=\"upvote\"><img src=\"./images/icon-plus.svg\" alt=\"up vote\"></div>\r\n            <div class=\"voteNumber\">{{commentData.score}}</div>\r\n            <div class=\"downvote\"><img src=\"./images/icon-minus.svg\" alt=\"down vote\"></div>\r\n        </div>\r\n        <div class=\"commentInfo\">\r\n            <img :src=\"image\" alt=\"image-amyrobson\" class=\"icon\">\r\n            <span class=\"username\">{{commentData.user.username}}</span>\r\n            <div class=\"you\"><span>you</span></div>\r\n            <p class=\"date\">{{commentData.createAt}}</p>\r\n        </div>\r\n        <div class=\"action\">\r\n            <div class=\"reply\">\r\n                <img src=\"./images/icon-reply.svg\" alt=\"reply\">\r\n                <span>Reply</span>\r\n            </div>\r\n            <div class=\"delete\">\r\n                <img src=\"./images/icon-delete.svg\" alt=\"delete\">\r\n                <span>Delete</span>\r\n            </div>\r\n            <div class=\"edit\">\r\n                <img src=\"./images/icon-edit.svg\" alt=\"Edit\">\r\n                <span>Edit</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"content\"><p>{{commentData.content}}</p>\r\n        </div>\r\n        <textarea name=\"comment\" id=\"text\" cols=\"30\" rows=\"3\" placeholder=\"Add a comment...\"></textarea>\r\n        <button>update</button>\r\n    </div>\r\n    `,\r\n    data: function () { \r\n        return { \r\n\r\n        }\r\n    },\r\n    methods: {\r\n\r\n    },\r\n    computed: {\r\n        image() {return this.commentData.user.image.png}\r\n    }\r\n});","VueApp.component('commentor', { \r\n    props: {\r\n        user: {\r\n            type: Object\r\n            ,required: true\r\n        }\r\n    },\r\n    template: \r\n    /* html */\r\n    `\r\n    <div class=\"commentor\" id=\"commentor\">\r\n        <img :src=\"avatar\" :alt=\"avatarOf\" class=\"avatar\">\r\n        <textarea name=\"comment\" id=\"text\" cols=\"30\" rows=\"3\" placeholder=\"Add a comment...\"></textarea>\r\n        <button>send</button>\r\n        <button>reply</button>\r\n    </div>\r\n    `, \r\n    data: function () {\r\n        return {\r\n            // isReply: false\r\n        }\r\n    },\r\n    created: function () {\r\n       \r\n        console.log(this.user.image.png);  \r\n          \r\n    },\r\n    methods: {\r\n        \r\n    },\r\n    computed: {\r\n        avatar() {return this.user.image.png}  \r\n        ,avatarOf() {return \"avatar of \" + this.user.username} \r\n        ,updater() {return this.user.image.png}\r\n    } \r\n    \r\n});","VueApp.component('interaction', {\r\n    props: {\r\n        context: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    template: \r\n    /* html */\r\n    `\r\n    <comment :commentData=\"context\"></comment>\r\n    \r\n    `,\r\n    data: function () {\r\n     return {\r\n        \r\n     }   \r\n    },\r\n    methods: {\r\n\r\n    },\r\n    computed: {\r\n\r\n    }\r\n});","VueApp.component('thread', { \r\n    props: {\r\n        commentin: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    template: \r\n    /* html */\r\n    `\r\n    <div class=\"thread\"> \r\n        <interaction :context=\"commentin\"  :key=\"commentin.id\"></interaction>\r\n        <div class=\"replys\" v-show=\"isReplied\">\r\n            <interaction v-for=\"(reply,index) in commentin.replies\" :context=\"reply\"  :key=\"index\"></interaction> \r\n        </div>\r\n    </div>\r\n    `,\r\n    data: function () { \r\n     return { \r\n         \r\n     }\r\n    },\r\n    methods: { \r\n\r\n    },\r\n    computed: {\r\n        isReplied() {return (this.commentin.replies <= 0)? false:true} \r\n    }\r\n});"]}