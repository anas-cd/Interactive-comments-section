{"version":3,"sources":["global/script.js","global/vue.js","global/_global.js","VueComps/alert-blocker.js","VueComps/comment.js","VueComps/commentor.js","VueComps/interaction.js","VueComps/thread.js"],"names":["console","log","app","VueApp","Vue","createApp","data","test","dataObj","comments","currentUser","sendAction","deletWarning","mounted","this","fetcher","methods","[object Object]","fetch","then","res","json","AddToLocal","catch","err","message","localStorage","setItem","JSON","stringify","key","global","init","loadHeader","async","updater","responce","component","emits","props","template","$emit","computed","commentData","type","Object","required","user","reply","Boolean","editMode","isCurrentUser","currentUserCheck","username","image","png","action","commentBy","String","created","context","status","commentin","replies"],"mappings":"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","file":"all.js","sourcesContent":["console.log(\"Load script.js\");  \r\n\r\n// Instantiating the global app object\r\nvar app = {}; \r\n\r\n","// Vue \r\nconst VueApp = Vue.createApp({ \r\n    data: function() {\r\n        return { \r\n            test: 'heeeee' \r\n            ,dataObj: {}\r\n            ,comments: []\r\n            ,currentUser: {}\r\n            ,sendAction: true // true for send, false for reply\r\n            ,deletWarning: false\r\n            \r\n        }\r\n    },\r\n    mounted: function () {\r\n        this.fetcher(); \r\n    },\r\n    methods: {\r\n        fetcher() {\r\n            fetch('./app/js/data/data.json')\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.dataObj = data;\r\n                    this.comments = data.comments;\r\n                    this.currentUser = data.currentUser;\r\n                    // updat local storage: \r\n                    this.AddToLocal(data);\r\n                })\r\n                .catch((err) => console.log(err.message))\r\n        },\r\n        AddToLocal(data) {\r\n\r\n            localStorage.setItem(\"dataJson\",JSON.stringify(data));\r\n                        \r\n        },\r\n        delAlert(key) { \r\n            this.deletWarning = true; \r\n        }\r\n    }\r\n}); \r\n\r\n\r\n","// Global\r\napp.global = {\r\n    init: function(){ // Load all global functions here\r\n        console.log(\"load global functions\");\r\n        app.global.loadHeader();\r\n    },\r\n    loadHeader: function(){ // Some specific function\r\n        console.log(\"loadHeader()\");\r\n        \r\n    },\r\n    fetcher: async function (updater) {\r\n        console.log(\"fetcher entered\");\r\n        const responce = await fetch('./app/js/data/data.json');\r\n        let data = await responce.json();\r\n        \r\n        \r\n        updater(data);\r\n    }\r\n};\r\n\r\n// Run the global stuff\r\napp.global.init();\r\n\r\n// methods of getting the body of the promise from fetcher: \r\n\r\n//1) IIFE (Immediately invoked function expression) for using await at the top level\r\n\r\n// (async function() {\r\n//     let dataObj = await app.global.fetcher(); \r\n//     console.log(dataObj);\r\n// })();\r\n\r\n\r\n//2) using a callback functino:\r\n \r\n// function updater(data) {\r\n//     // the code in here will run whenever the fetcher finishes\r\n//     console.log(data);\r\n//     console.log(\"HELLLOOOO\");\r\n//     return data; \r\n// }\r\n// app.global.fetcher(updater); // here we are passing the updater function as a callback function\r\n\r\n\r\n","VueApp.component('alert-blocker', {\r\n    emits: ['alert-cancel'],\r\n    props: {\r\n        \r\n    },\r\n    template:\r\n    /* html */\r\n    `\r\n    <div class=\"alertBlocker\">\r\n        <div class=\"deleteAlert\">\r\n            <h1>Delete comment</h1>\r\n            <p>Are you sure you want to delete this comment? This will remove the comment and can't be undone.</p>\r\n            <button @click=\"cancel\">NO, CANCEL</button>\r\n            <button>YES, DELETE</button>\r\n        </div>\r\n    </div>\r\n    `,\r\n    data: function () {\r\n        return {\r\n            \r\n        }\r\n    },\r\n    methods: {\r\n        cancel() {\r\n            this.$emit('alert-cancel');\r\n        }\r\n    },\r\n    computed: {\r\n        \r\n    }\r\n});","VueApp.component('comment', {\r\n    props: {\r\n        commentData: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        user: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        reply: {\r\n            type: Boolean,\r\n            required: true\r\n        }\r\n    }, \r\n    template: \r\n    /* html */\r\n    `\r\n    <div class=\"comment\">\r\n        <div class=\"votes\">\r\n            <div class=\"upvote\"><img src=\"./images/icon-plus.svg\" alt=\"up vote\"></div>\r\n            <div class=\"voteNumber\">{{commentData.score}}</div>\r\n            <div class=\"downvote\"><img src=\"./images/icon-minus.svg\" alt=\"down vote\"></div>\r\n        </div>\r\n        <div class=\"commentInfo\">\r\n            <img :src=\"image\" alt=\"image-amyrobson\" class=\"icon\">\r\n            <span class=\"username\">{{commentData.user.username}}</span>\r\n            <div class=\"you\" v-show=\"isCurrentUser\"><span>you</span></div>\r\n            <p class=\"date\">{{commentData.createdAt}}</p>\r\n        </div>\r\n        <div class=\"action\">\r\n            <div class=\"reply\" v-show=\"!isCurrentUser && !reply\" @click=\"replyEmiter\">\r\n                <img src=\"./images/icon-reply.svg\" alt=\"reply\">\r\n                <span>Reply</span>\r\n            </div>\r\n            <div class=\"reply\" v-show=\"!isCurrentUser && reply\" @click=\"replyEmiter\">\r\n                <img src=\"./images/icon-reply.svg\" alt=\"reply\">\r\n                <span>Cancel Reply</span>\r\n            </div>\r\n            <div class=\"delete\" v-show=\"isCurrentUser\" @click=\"deletEmiter\">\r\n                <img src=\"./images/icon-delete.svg\" alt=\"delete\">\r\n                <span>Delete</span>\r\n            </div>\r\n            <div class=\"edit\" v-show=\"isCurrentUser && !editMode\" @click=\"editToggle\">\r\n                <img src=\"./images/icon-edit.svg\" alt=\"Edit\">\r\n                <span>Edit</span>\r\n            </div>\r\n            <div class=\"edit\" v-show=\"isCurrentUser && editMode\" @click=\"editToggle\">\r\n                <img src=\"./images/icon-edit.svg\" alt=\"Edit\">\r\n                <span>Discard</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"content\" v-show=\"!editMode\"><p>{{commentData.content}}</p>\r\n        </div>\r\n        <textarea name=\"comment\" id=\"text\" cols=\"30\" rows=\"3\" placeholder=\"Add a comment...\" v-show=\"editMode\">{{commentData.content}}</textarea>\r\n        <button v-show=\"editMode\">UPDATE</button>\r\n    </div>\r\n    `,\r\n    data: function () { \r\n        return { \r\n            editMode: false,\r\n            isCurrentUser: this.currentUserCheck()\r\n        }\r\n    },\r\n    methods: {\r\n        currentUserCheck() {\r\n            if (this.user.username == this.commentData.user.username) {\r\n                return true;\r\n            }else return false; \r\n        },\r\n        editToggle() {\r\n            if (this.editMode) {\r\n                this.editMode = false;\r\n            } else {\r\n                this.editMode = true; \r\n            }\r\n        },\r\n        replyEmiter() {\r\n            if (this.reply) {\r\n                this.$emit('isReply',false);\r\n            } else {\r\n                this.$emit('isReply',true);\r\n            }\r\n        },\r\n        deletEmiter() {\r\n            this.$emit('del-alert');\r\n        }\r\n    },\r\n    computed: {\r\n        image() {return this.commentData.user.image.png},\r\n        \r\n    }\r\n});","VueApp.component('commentor', { \r\n    props: {\r\n        user: {\r\n            type: Object\r\n            ,required: true\r\n        },\r\n        action: {\r\n            type: Boolean,\r\n            required: true\r\n        },\r\n        commentBy: {\r\n            type: String,\r\n            required: false // it works that way \r\n        }\r\n    },\r\n    template: \r\n    /* html */\r\n    `\r\n    <div class=\"commentor\" id=\"commentor\">\r\n        <img :src=\"avatar\" :alt=\"avatarOf\" class=\"avatar\">\r\n        <textarea name=\"comment\" id=\"text\" cols=\"30\" rows=\"3\" placeholder=\"Add a comment...\" :class=\"(!this.action)? 'rep':''\">{{ filler }}</textarea>\r\n        <button v-show=\"this.action\">send</button>\r\n        <button v-show=\"!this.action\">reply</button>\r\n    </div>\r\n    `, \r\n    data: function () {\r\n        return {\r\n            // isReply: false\r\n        }\r\n    },\r\n    created: function () {\r\n       \r\n        // console.log(this.user.image.png); \r\n        \r\n    },\r\n    methods: {\r\n        \r\n    },\r\n    computed: {\r\n        avatar() {return this.user.image.png}  \r\n        ,avatarOf() {return \"avatar of \" + this.user.username} \r\n        ,updater() {return this.user.image.png},\r\n        filler() {return (!this.action)? \"@\"+this.commentBy+\", \":\"\"}\r\n        \r\n    } \r\n    \r\n});","VueApp.component('interaction', {\r\n    emits: ['del'],\r\n    props: {\r\n        context: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        user: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    template: \r\n    /* html */\r\n    `\r\n    <comment :commentData=\"context\" :user=\"user\" :reply=\"reply\" @isReply=\"replyToggle\" @del-alert=\"deletAlert\"></comment>\r\n    <commentor v-if=\"user.image\" :user=\"user\" v-show=\"reply\" :action=\"sendAction\" :commentBy=\"context.user.username\"></commentor> \r\n    `, \r\n    data: function () {\r\n     return {\r\n        reply: false,\r\n        sendAction: false\r\n     }   \r\n    },\r\n    methods: {\r\n        replyToggle(status) {\r\n            if (status) {\r\n                this.reply = true; \r\n            } else {\r\n                this.reply = false; \r\n            }\r\n        },\r\n        deletAlert() {\r\n            this.$emit('del');\r\n        }\r\n    },\r\n    computed: {\r\n\r\n    }\r\n});","VueApp.component('thread', { \r\n    props: {\r\n        commentin: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        user: {\r\n            type: Object,\r\n            required:true\r\n        }\r\n    },\r\n    template:  \r\n    /* html */\r\n    `\r\n    <div class=\"thread\"> \r\n        <interaction :context=\"commentin\" :user=\"user\" @del=\"alert(commentin.id)\" :key=\"commentin.id\"></interaction>\r\n        <div class=\"replys\" v-show=\"isReplied\">\r\n            <interaction v-for=\"(reply,index) in commentin.replies\" :user=\"user\" :context=\"reply\" @del=\"alert(index)\" :key=\"index\"></interaction> \r\n        </div>\r\n    </div>\r\n    `,\r\n    data: function () {\r\n     return {  \r\n         \r\n     }\r\n    },\r\n    methods: { \r\n        alert(key) {\r\n            this.$emit('delete',key);\r\n        }\r\n    },\r\n    computed: {\r\n        isReplied() {return (this.commentin.replies <= 0)? false:true} \r\n    }\r\n});"]}